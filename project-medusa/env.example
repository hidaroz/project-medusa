# ============================================================================
# MEDUSA Project - Environment Configuration Template
# ============================================================================
# Copy this file to .env and fill in your actual values
# Command: cp env.example .env
# ============================================================================

# ============================================================================
# LLM CONFIGURATION (REQUIRED)
# ============================================================================
# Google Gemini API Key - Get yours at: https://makersuite.google.com/app/apikey
GOOGLE_API_KEY=your_gemini_api_key_here

# LLM Model Selection
# Options: gemini-pro, gemini-1.5-pro, gemini-1.5-flash
LLM_MODEL=gemini-pro

# LLM Temperature (0.0 - 1.0)
# Lower = more focused, Higher = more creative
LLM_TEMPERATURE=0.7

# Maximum tokens for LLM responses
LLM_MAX_TOKENS=2048

# LLM Timeout (seconds)
LLM_TIMEOUT=30

# ============================================================================
# MEDUSA APPLICATION SETTINGS
# ============================================================================
# Application environment (development, production, lab)
APP_ENV=development

# Enable debug mode (true/false)
APP_DEBUG=true

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# MEDUSA home directory (stores logs, reports, config)
MEDUSA_HOME=~/.medusa

# ============================================================================
# DOCKER LAB ENVIRONMENT
# ============================================================================
# MySQL Database
MYSQL_ROOT_PASSWORD=admin123
MYSQL_DATABASE=healthcare_db
MYSQL_USER=ehrapp
MYSQL_PASSWORD=Welcome123!

# Database Host (use 'localhost' for external access, 'ehr-database' for internal)
DB_HOST=localhost
DB_PORT=3306

# ============================================================================
# NETWORK CONFIGURATION
# ============================================================================
# Docker network subnets
DMZ_SUBNET=172.20.0.0/24
INTERNAL_SUBNET=172.21.0.0/24

# Service ports (should match docker-compose.yml)
EHR_WEB_PORT=8080
EHR_API_PORT=3000
SSH_PORT=2222
FTP_PORT=21
LDAP_PORT=389
LOG_COLLECTOR_PORT=8081
MYSQL_PORT=3306
SMB_PORT=445

# ============================================================================
# SECURITY SETTINGS
# ============================================================================
# Approval gate for high-risk commands (true/false)
REQUIRE_APPROVAL=true

# Maximum risk level without approval (LOW, MEDIUM, HIGH, CRITICAL)
MAX_AUTO_RISK=MEDIUM

# Enable audit logging (true/false)
AUDIT_LOGGING=true

# Audit log file
AUDIT_LOG_FILE=~/.medusa/logs/audit.log

# ============================================================================
# REPORTING CONFIGURATION
# ============================================================================
# Default report format (text, json, html, markdown)
REPORT_FORMAT=html

# Report output directory
REPORT_OUTPUT_DIR=~/.medusa/reports

# Include screenshots in reports (true/false)
REPORT_SCREENSHOTS=true

# Include command history in reports (true/false)
REPORT_COMMAND_HISTORY=true

# ============================================================================
# ADVANCED SETTINGS
# ============================================================================
# Maximum concurrent operations
MAX_CONCURRENT_OPS=3

# Command timeout (seconds)
COMMAND_TIMEOUT=60

# Retry failed operations (true/false)
RETRY_ENABLED=true

# Maximum retry attempts
MAX_RETRIES=3

# ============================================================================
# OPTIONAL: RAG (Retrieval-Augmented Generation) SETTINGS
# ============================================================================
# Enable RAG for enhanced context (true/false)
RAG_ENABLED=false

# RAG vector database path
RAG_DB_PATH=~/.medusa/vectordb

# RAG embedding model
RAG_EMBEDDING_MODEL=text-embedding-004

# ============================================================================
# OPTIONAL: WEBHOOK/NOTIFICATION SETTINGS
# ============================================================================
# Enable notifications (true/false)
NOTIFICATIONS_ENABLED=false

# Slack webhook URL (optional)
SLACK_WEBHOOK_URL=

# Discord webhook URL (optional)
DISCORD_WEBHOOK_URL=

# Email notifications (optional)
EMAIL_ENABLED=false
SMTP_HOST=
SMTP_PORT=587
SMTP_USER=
SMTP_PASSWORD=
SMTP_FROM=

# ============================================================================
# OPTIONAL: INTEGRATION SETTINGS
# ============================================================================
# Enable integration with external tools (true/false)
INTEGRATIONS_ENABLED=false

# Metasploit RPC settings (if using)
MSF_RPC_HOST=localhost
MSF_RPC_PORT=55553
MSF_RPC_USER=msf
MSF_RPC_PASS=

# Nmap path (optional, defaults to system nmap)
NMAP_PATH=/usr/bin/nmap

# ============================================================================
# DEVELOPER SETTINGS
# ============================================================================
# Enable development mode features (true/false)
DEV_MODE=true

# Enable verbose logging (true/false)
VERBOSE=false

# Enable profiling (true/false)
PROFILING=false

# Enable mock LLM responses for testing (true/false)
MOCK_LLM=false

# ============================================================================
# NOTES
# ============================================================================
# - Lines starting with # are comments
# - Values with spaces should NOT be quoted
# - Use 'true' or 'false' for boolean values (lowercase)
# - Paths with ~ will expand to home directory
# - Required fields: GOOGLE_API_KEY
# - After editing, run: source .env (bash) or set -a; source .env; set +a
# ============================================================================

