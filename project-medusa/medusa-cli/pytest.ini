[pytest]
# Pytest configuration for MEDUSA testing

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Asyncio configuration
asyncio_mode = auto

# Output options
addopts =
    # Verbose output
    -v
    # Show extra test summary info
    -ra
    # Show local variables in tracebacks
    --tb=short
    # Strict markers - fail on unknown markers
    --strict-markers
    # Warnings
    -W default
    # Show durations of slowest tests
    --durations=10

# Coverage options (when using pytest-cov)
# Run with: pytest --cov=medusa --cov-report=html
[coverage:run]
source = src/medusa
omit =
    */tests/*
    */__init__.py
    */__pycache__/*
    */venv/*
    */site-packages/*

[coverage:report]
precision = 2
show_missing = True
skip_covered = False
exclude_lines =
    # Standard pragmas
    pragma: no cover
    # Don't complain about debug code
    def __repr__
    # Don't complain if tests don't hit defensive assertion code
    raise AssertionError
    raise NotImplementedError
    # Don't complain about abstract methods
    @abstractmethod
    # Don't complain if non-runnable code isn't run
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    if typing.TYPE_CHECKING:

# Test markers
markers =
    unit: Unit tests for individual components (fast, no external dependencies)
    integration: Integration tests for component interactions (may be slower)
    slow: Tests that take longer than 1 second to complete
    requires_api: Tests that require real API access (Gemini API key)
    requires_docker: Tests that require Docker environment to be running
    
# Logging
log_cli = False
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/logs/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(name)s:%(lineno)d - %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Timeout settings (requires pytest-timeout)
# timeout = 300
# timeout_method = thread

# Minimum Python version
minversion = 3.9

# Ignore directories
norecursedirs =
    .git
    .tox
    dist
    build
    *.egg
    __pycache__
    .pytest_cache
    .venv
    venv
    node_modules

# Filter warnings
filterwarnings =
    # Treat warnings as errors (comment out during development)
    # error
    # Ignore specific warnings
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    # Ignore warnings from third-party packages
    ignore:.*U.*mode is deprecated:DeprecationWarning

